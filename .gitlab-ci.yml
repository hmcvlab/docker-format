---
stages:
  - cleanup
  - prepare
  - build
  - test

variables:
  CI_URL: "${CI_REGISTRY}/messtechnik-labor/barcs/docker/continuous-integration"
  AMD_CI_IMAGE: "${CI_URL}/x86_64-ubuntu22:latest"
  ARM_CI_IMAGE: "${CI_URL}/aarch64-r35:latest"
  LABEL: "maintainer=messtechnik-labor"

default:
  retry: 2
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}

###############
### Cleanup ###
###############

.template_cleanup:
  rules:
    - if: "$CI_COMMIT_TAG"
      when: never
  stage: cleanup
  needs: []
  script:
    - df -H
    - docker system prune -a -f --filter "until=72h" --filter "label=${LABEL}"

amd_docker_cleanup:
  tags: [x86_64]
  image: "${AMD_CI_IMAGE}"
  extends: .template_cleanup

arm_docker_cleanup:
  tags: [aarch64]
  image: "${ARM_CI_IMAGE}"
  extends: .template_cleanup

############
### Lint ###
############

lint_project:
  stage: prepare
  tags: [x86_64]
  rules:
    - if: "$CI_COMMIT_TAG"
  image: "${AMD_CI_IMAGE}"
  needs: []
  script:
    - scripts/lint.sh

test_project:
  stage: prepare
  tags: [x86_64]
  rules:
    - if: "$CI_COMMIT_TAG"
  image: "${AMD_CI_IMAGE}"
  needs: ["lint_project"]
  script:
    - scripts/test.sh

#############
### Build ###
#############

.template_test:
  stage: test
  needs: ["test_project"]
  rules:
    - if: "$CI_COMMIT_TAG"
  script:
    - python3 -m pytest test/container/

############
### Test ###
############

.template_push:
  stage: push
  rules:
    - if: "$CI_COMMIT_TAG"
  script:
    - docker pull "${IMAGE_PULL}"
    - docker tag "${IMAGE_PULL}" "${IMAGE_LATEST}"
    - docker push "${IMAGE_LATEST}"
